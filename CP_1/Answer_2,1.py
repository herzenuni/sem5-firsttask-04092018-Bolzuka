# Самостоятельная работа 1
# Шибаева Мария Дмитриевна|  ИВТ | 3 курс | 1 подгруппа

# Напишите программу, в которой пользователь вводит число от 0 до 9 включительно,а программа выводит название введённого числа, 
# а если ? второй входной аргумент ? type имеет значение bin, oct, hex, то функция преобразует это число в бинарную, восьмеричную или шестнадцатеричную форму. 
# Предусмотреть проверку корректности введённого пользователем значения. При реализации должны использоваться декораторы (но можно обойтись и без них). Предусмотрите обработку исключительных ситуаций. Напишите тесты с использованием assert.

# bin(x) - преобразование целого числа в двоичную строку.
# oct(х) - преобразование целого числа в восьмеричную строку. 
# hex(х) - преобразование целого числа в шестнадцатеричную строку.

#Для программы, сделанной в рамках лабораторной работы 1 и 2, реализуйте с использованием механизма декораторов (предпочтительно) или без него (в этом случае будет необходимо использовать еще один аргумент) функционал для сохранения истории вычислений функции в файл. 

#При записи в файл предусмотреть вероятность возникновения исключительных ситуаций и создать собственный класс или классы для обработки исключительных ситуаций при записи в файл. 


print('Инструкция: ')
print('1) Введите число, которое хотите вывести и/или перевести)')  
print('2) Введите название системы счисления через пробел, или не пишите, тогда введите пробел')
print('3) Как только вы введете все данные напишите "end"')
print('4) Посмотрите ответ')
print('\n')


class RangeException(Exception):
  def __init__(self,text):
        RangeException.txt = text


logger = []

try:
    number = int(input('Введите число от 0 до 9: '))
    if ((number<0) | (number>9)):
      raise RangeException('Введенное число не входит в указанный интервал')
      
except RangeException:
    print('Введенное число не подходит, попробуйте ввести число еще раз')
    number = int(input('Введите число от 0 до 9:'))
    logger.append("Исключение: RangeException")

except ValueError:
    print('Введенный символ не подходит, попробуйте ввести число еще раз')
    number = int(input('Введите число от 0 до 9: '))

answer = input('Ответьте на вопрос, "да" или "нет": Вы хотите перевевти введеное число в какую-либо систему счисления?')
if (answer == 'да'):
      t = input('\n bin - бинарная система счисления\n oct - восьмеричная система счисления \n hex - шестнадцатиричная система счисления\n \nВведите название системы счисления:')
else:
      t=''  



def print_number_and_word():
  
  

    if (number == 0):
      print("\n Ноль")
    elif (number == 1):
      print("\n Один")
    elif (number == 2):
      print("\n Два")
    elif (number == 3):
      print("\n Три")
    elif (number == 4):
      print("\n Четыре")
    elif (number == 5):
      print("\n Пять")
    elif (number == 6):
      print("\n Шесть")
    elif (number == 7):
      print("\n Семь")
    elif (number == 8):
      print("\n Восемь")
    elif (number == 9):
      print("\n Девять")
    else:
      print("Начните сначала")


    if t == 'bin':
      print("\n Двоичная система счисления: ", bin(number))
    elif t == 'oct':
      print("\n Восьмеричная система счисления: ", oct(number))
    elif t == 'hex':
      print("\n Шестнадцатеричная система счисления: ", hex(number))


  


    if len(logger) == 1:   
     logger.append("Исключений: не выявлено!")
    try:
      with open('Record.txt', 'a') as f:
        f.write(str(logger) + "\n")
        f.write("Введено число: " + str(number) + " Система счисления: " +str(t))
    except IOError:
      print("Ошибка при чтении файла или записи в файл") 
    


print_number_and_word()


def print_number_and_word():
  assert 0 == 'Ноль', 'Название цифры не верно'
  assert 1 == 'Один', 'Название цифры не верно'
  assert 2 == 'Два', 'Название цифры не верно'
  assert 3 == 'Три', 'Название цифры не верно'
  assert 4 == 'Четыре', 'Название цифры не верно'
  assert 5 == 'Пять', 'Название цифры не верно'
  assert 6 == 'Шесть', 'Название цифры не верно'
  assert 7 == 'Семь', 'Название цифры не верно'
  assert 8 == 'Восемь', 'Название цифры не верно'
  assert 9 == 'Девять', 'Название цифры не верно'
  assert (7,'bin') == ('Семь', '0b111'), 'Название цифры не верно'
  assert (1,'oct') == ('Один', '0o1'), 'Название цифры не верно'
  assert (2,'hex') == ('Два', '0x2'), 'Название цифры не верно'

